version: 2
jobs:
  test-debug:
    docker:
    - image: mcr.microsoft.com/dotnet/core/sdk:3.0
    steps:
    - checkout
    - run: 
        command: ls -lah
    - run:
        command: dotnet test --configuration Debug --framework netcoreapp3.0 ./tests/GraphQL.Common.Tests/GraphQL.Common.Tests.csproj
    - run:
        command: dotnet test --configuration Debug --framework netcoreapp3.0 ./tests/GraphQL.Client.Tests/GraphQL.Client.Tests.csproj
  test-release:
    docker:
    - image: mcr.microsoft.com/dotnet/core/sdk:3.0
    steps:
    - checkout
    - run: 
        command: ls -lah
    - run:
        command: dotnet test --configuration Release --framework netcoreapp3.0 ./tests/GraphQL.Common.Tests/GraphQL.Common.Tests.csproj
    - run:
        command: dotnet test --configuration Release --framework netcoreapp3.0 ./tests/GraphQL.Client.Tests/GraphQL.Client.Tests.csproj
  deploy:
    docker:
    - image: mcr.microsoft.com/dotnet/core/sdk:3.0
    environment:
    - MY_GET_SOURCE: https://www.myget.org/F/graphql-dotnet/api/v3/index.json
    steps:
    - checkout
    - run:
        command: dotnet build --configuration Release
    - run:
        command: dotnet pack --configuration Release
    - store_artifacts:
        path: ./src/GraphQL.Common/bin/Release/GraphQL.Common.2.0.0-alpha.4.nupkg
    - store_artifacts:
        path: ./src/GraphQL.Client/bin/Release/GraphQL.Client.2.0.0-alpha.4.nupkg
    - deploy:
        name: MyGet
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            dotnet nuget push ./src/GraphQL.Common/bin/Release/GraphQL.Common.2.0.0-alpha.4.nupkg --api-key $MY_GET_API_KEY --source $MY_GET_SOURCE
            dotnet nuget push ./src/GraphQL.Client/bin/Release/GraphQL.Client.2.0.0-alpha.4.nupkg --api-key $MY_GET_API_KEY --source $MY_GET_SOURCE
          fi
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
    - test-debug
    - test-release
    - deploy:
        requires:
        - test-debug
        - test-release
